from unittest import TestCase

from profile_generator.main.profile_params import ProfileParams

from .profile_generator import generate

DEFAULT = {
    "RGBCurvesEnabled": "false",
    "RGBCurvesRCurve": "0;",
    "RGBCurvesGCurve": "0;",
    "RGBCurvesBCurve": "0;",
    "CTEnabled": "false",
    "CTShadowA": "0.0",
    "CTShadowB": "0.0",
    "CTShadowMask": "0;",
    "CTMidtoneA": "0.0",
    "CTMidtoneB": "0.0",
    "CTMidtoneMask": "0;",
    "CTHighlightA": "0.0",
    "CTHighlightB": "0.0",
    "CTHighlightMask": "0;",
    "HSVEnabled": "false",
    "HSVHCUrve": "0;",
    "HSVSCUrve": "0;",
    "HSVVCUrve": "0;",
}


class ProfileGeneratorTest(TestCase):
    def test_generate_default(self) -> None:
        params = ProfileParams()
        params.parse({})

        self.assertDictEqual(generate(params), DEFAULT)

    def test_generate_toning(self) -> None:
        params = ProfileParams()
        params.parse(
            {
                "colors": {
                    "grading": {"toning": {"channels": "one", "midtone": [-1, 3, 135]}}
                }
            }
        )

        self.assertDictEqual(
            generate(params),
            DEFAULT
            | {
                "CTMidtoneA": "-0.0212132",
                "CTMidtoneB": "0.0212132",
                "CTMidtoneMask": "1;0.0000000;1.0000000;0.1666667;0.1666667;"
                + "1.0000000;1.0000000;0.1666667;0.1666667;",
            },
        )

    def test_generate_matte(self) -> None:
        params = ProfileParams()
        params.parse({"colors": {"grading": {"matte": {"black": 5, "white": 95}}}})

        self.assertDictEqual(
            generate(params),
            DEFAULT
            | {
                "RGBCurvesEnabled": "true",
                "RGBCurvesRCurve": "4;0.0000000;0.0500000;0.0470588;0.0664983;"
                + "0.0901961;0.0940723;0.1254902;0.1254902;0.1607843;0.1607843;"
                + "0.1960784;0.1960784;0.2313725;0.2313725;0.2666667;0.2666667;"
                + "0.3019608;0.3019608;0.3372549;0.3372549;0.3725490;0.3725490;"
                + "0.4078431;0.4078431;0.4431373;0.4431373;0.4784314;0.4784314;"
                + "0.5137255;0.5137255;0.5490196;0.5490196;0.5843137;0.5843137;"
                + "0.6196078;0.6196078;0.6549020;0.6549020;0.6901961;0.6901961;"
                + "0.7254902;0.7254902;0.7607843;0.7607843;0.7960784;0.7960784;"
                + "0.8313725;0.8313725;0.8666667;0.8666667;0.9019608;0.8996348;"
                + "0.9411765;0.9271626;0.9843137;0.9460754;1.0000000;0.9500000;",
                "RGBCurvesGCurve": "4;0.0000000;0.0500000;0.0470588;0.0664983;"
                + "0.0901961;0.0940723;0.1254902;0.1254902;0.1607843;0.1607843;"
                + "0.1960784;0.1960784;0.2313725;0.2313725;0.2666667;0.2666667;"
                + "0.3019608;0.3019608;0.3372549;0.3372549;0.3725490;0.3725490;"
                + "0.4078431;0.4078431;0.4431373;0.4431373;0.4784314;0.4784314;"
                + "0.5137255;0.5137255;0.5490196;0.5490196;0.5843137;0.5843137;"
                + "0.6196078;0.6196078;0.6549020;0.6549020;0.6901961;0.6901961;"
                + "0.7254902;0.7254902;0.7607843;0.7607843;0.7960784;0.7960784;"
                + "0.8313725;0.8313725;0.8666667;0.8666667;0.9019608;0.8996348;"
                + "0.9411765;0.9271626;0.9843137;0.9460754;1.0000000;0.9500000;",
                "RGBCurvesBCurve": "4;0.0000000;0.0500000;0.0470588;0.0664983;"
                + "0.0901961;0.0940723;0.1254902;0.1254902;0.1607843;0.1607843;"
                + "0.1960784;0.1960784;0.2313725;0.2313725;0.2666667;0.2666667;"
                + "0.3019608;0.3019608;0.3372549;0.3372549;0.3725490;0.3725490;"
                + "0.4078431;0.4078431;0.4431373;0.4431373;0.4784314;0.4784314;"
                + "0.5137255;0.5137255;0.5490196;0.5490196;0.5843137;0.5843137;"
                + "0.6196078;0.6196078;0.6549020;0.6549020;0.6901961;0.6901961;"
                + "0.7254902;0.7254902;0.7607843;0.7607843;0.7960784;0.7960784;"
                + "0.8313725;0.8313725;0.8666667;0.8666667;0.9019608;0.8996348;"
                + "0.9411765;0.9271626;0.9843137;0.9460754;1.0000000;0.9500000;",
            },
        )

from unittest import TestCase

from profile_generator.main.profile_params import ProfileParams

from .profile_generator import generate

DEFAULT = {
    "RGBCurvesEnabled": "false",
    "RGBCurvesRCurve": "0;",
    "RGBCurvesGCurve": "0;",
    "RGBCurvesBCurve": "0;",
    "CTEnabled": "false",
    "CTShadowA": "0.0",
    "CTShadowB": "0.0",
    "CTShadowMask": "0;",
    "CTMidtoneA": "0.0",
    "CTMidtoneB": "0.0",
    "CTMidtoneMask": "0;",
    "CTHighlightA": "0.0",
    "CTHighlightB": "0.0",
    "CTHighlightMask": "0;",
    "HSVEnabled": "false",
    "HSVHCUrve": "0;",
    "HSVSCUrve": "0;",
    "HSVVCUrve": "0;",
}


class ProfileGeneratorTest(TestCase):
    def test_generate_default(self) -> None:
        params = ProfileParams()
        params.parse({})

        self.assertDictEqual(generate(params), DEFAULT)

    def test_generate_toning(self) -> None:
        params = ProfileParams()
        params.parse(
            {
                "colors": {
                    "grading": {"toning": {"channels": "one", "midtone": [-1, 3, 135]}}
                }
            }
        )

        self.assertDictEqual(
            generate(params),
            {
                "RGBCurvesEnabled": "true",
                "RGBCurvesRCurve": "4;0.0000000;0.0000000;0.0312500;0.0305463;"
                + "0.0625000;0.0612579;0.0937500;0.0919449;0.1250000;0.1218755;"
                + "0.1562500;0.1516247;0.1875000;0.1812438;0.2187500;0.2107810;"
                + "0.2500000;0.2402805;0.2812500;0.2697845;0.3125000;0.2993325;"
                + "0.3437500;0.3289621;0.3750000;0.3587091;0.4062500;0.3886076;"
                + "0.4375000;0.4186902;0.4687500;0.4490842;0.5000000;0.4808638;"
                + "0.5312500;0.5128669;0.5625000;0.5450616;0.5937500;0.5774171;"
                + "0.6250000;0.6099031;0.6562500;0.6424905;0.6875000;0.6751508;"
                + "0.7187500;0.7078563;0.7500000;0.7405803;0.7812500;0.7732963;"
                + "0.8125000;0.8059788;0.8437500;0.8386028;0.8750000;0.8711437;"
                + "0.9062500;0.9035774;0.9375000;0.9358802;0.9687500;0.9680287;"
                + "1.0000000;1.0000000;",
                "RGBCurvesGCurve": "4;0.0000000;0.0000000;0.0312500;0.0306592;"
                + "0.0625000;0.0616268;0.0937500;0.0927277;0.1250000;0.1235660;"
                + "0.1562500;0.1544631;0.1875000;0.1854005;0.2187500;0.2163609;"
                + "0.2500000;0.2473275;0.2812500;0.2782846;0.3125000;0.3092172;"
                + "0.3437500;0.3401107;0.3750000;0.3709514;0.4062500;0.4017257;"
                + "0.4375000;0.4324207;0.4687500;0.4631204;0.5000000;0.4948796;"
                + "0.5312500;0.5265621;0.5625000;0.5581789;0.5937500;0.5897409;"
                + "0.6250000;0.6212591;0.6562500;0.6527445;0.6875000;0.6842080;"
                + "0.7187500;0.7156606;0.7500000;0.7471131;0.7812500;0.7785762;"
                + "0.8125000;0.8100607;0.8437500;0.8415772;0.8750000;0.8731360;"
                + "0.9062500;0.9047476;0.9375000;0.9364222;0.9687500;0.9681697;"
                + "1.0000000;1.0000000;",
                "RGBCurvesBCurve": "4;0.0000000;0.0000000;0.0312500;0.0305088;"
                + "0.0625000;0.0611349;0.0937500;0.0916844;0.1250000;0.1213185;"
                + "0.1562500;0.1506929;0.1875000;0.1798843;0.2187500;0.2089616;"
                + "0.2500000;0.2379889;0.2812500;0.2670262;0.3125000;0.2961300;"
                + "0.3437500;0.3253539;0.3750000;0.3547490;0.4062500;0.3843641;"
                + "0.4375000;0.4142462;0.4687500;0.4445365;0.5000000;0.4763156;"
                + "0.5312500;0.5084143;0.5625000;0.5407881;0.5937500;0.5733932;"
                + "0.6250000;0.6061870;0.6562500;0.6391276;0.6875000;0.6721741;"
                + "0.7187500;0.7052863;0.7500000;0.7384249;0.7812500;0.7715513;"
                + "0.8125000;0.8046278;0.8437500;0.8376170;0.8750000;0.8704827;"
                + "0.9062500;0.9031888;0.9375000;0.9357001;0.9687500;0.9679819;"
                + "1.0000000;1.0000000;",
            },
        )

    def test_generate_matte(self) -> None:
        params = ProfileParams()
        params.parse({"colors": {"grading": {"matte": {"black": 5, "white": 95}}}})

        self.assertDictEqual(
            generate(params),
            {
                "RGBCurvesEnabled": "true",
                "RGBCurvesRCurve": "4;0.0000000;0.0500000;0.0312500;0.0593750;"
                + "0.0625000;0.0750000;0.0937500;0.0968750;0.1250000;0.1250000;"
                + "0.1562500;0.1562500;0.1875000;0.1875000;0.2187500;0.2187500;"
                + "0.2500000;0.2500000;0.2812500;0.2812500;0.3125000;0.3125000;"
                + "0.3437500;0.3437500;0.3750000;0.3750000;0.4062500;0.4062500;"
                + "0.4375000;0.4375000;0.4687500;0.4687500;0.5000000;0.5000000;"
                + "0.5312500;0.5312500;0.5625000;0.5625000;0.5937500;0.5937500;"
                + "0.6250000;0.6250000;0.6562500;0.6562500;0.6875000;0.6875000;"
                + "0.7187500;0.7187500;0.7500000;0.7500000;0.7812500;0.7812500;"
                + "0.8125000;0.8125000;0.8437500;0.8437500;0.8750000;0.8750000;"
                + "0.9062500;0.9031250;0.9375000;0.9250000;0.9687500;0.9406250;"
                + "1.0000000;0.9500000;",
                "RGBCurvesGCurve": "4;0.0000000;0.0500000;0.0312500;0.0593750;"
                + "0.0625000;0.0750000;0.0937500;0.0968750;0.1250000;0.1250000;"
                + "0.1562500;0.1562500;0.1875000;0.1875000;0.2187500;0.2187500;"
                + "0.2500000;0.2500000;0.2812500;0.2812500;0.3125000;0.3125000;"
                + "0.3437500;0.3437500;0.3750000;0.3750000;0.4062500;0.4062500;"
                + "0.4375000;0.4375000;0.4687500;0.4687500;0.5000000;0.5000000;"
                + "0.5312500;0.5312500;0.5625000;0.5625000;0.5937500;0.5937500;"
                + "0.6250000;0.6250000;0.6562500;0.6562500;0.6875000;0.6875000;"
                + "0.7187500;0.7187500;0.7500000;0.7500000;0.7812500;0.7812500;"
                + "0.8125000;0.8125000;0.8437500;0.8437500;0.8750000;0.8750000;"
                + "0.9062500;0.9031250;0.9375000;0.9250000;0.9687500;0.9406250;"
                + "1.0000000;0.9500000;",
                "RGBCurvesBCurve": "4;0.0000000;0.0500000;0.0312500;0.0593750;"
                + "0.0625000;0.0750000;0.0937500;0.0968750;0.1250000;0.1250000;"
                + "0.1562500;0.1562500;0.1875000;0.1875000;0.2187500;0.2187500;"
                + "0.2500000;0.2500000;0.2812500;0.2812500;0.3125000;0.3125000;"
                + "0.3437500;0.3437500;0.3750000;0.3750000;0.4062500;0.4062500;"
                + "0.4375000;0.4375000;0.4687500;0.4687500;0.5000000;0.5000000;"
                + "0.5312500;0.5312500;0.5625000;0.5625000;0.5937500;0.5937500;"
                + "0.6250000;0.6250000;0.6562500;0.6562500;0.6875000;0.6875000;"
                + "0.7187500;0.7187500;0.7500000;0.7500000;0.7812500;0.7812500;"
                + "0.8125000;0.8125000;0.8437500;0.8437500;0.8750000;0.8750000;"
                + "0.9062500;0.9031250;0.9375000;0.9250000;0.9687500;0.9406250;"
                + "1.0000000;0.9500000;",
            },
        )

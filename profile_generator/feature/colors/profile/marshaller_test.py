from unittest import TestCase

from .marshaller import get_profile_args

_DEFAULT = {
    "LabEnabled": "false",
    "LabaCurve": "0;",
    "LabbCurve": "0;",
}


class MarshallerTest(TestCase):
    def test_default(self) -> None:
        self.assertEqual(_DEFAULT, get_profile_args({}))

    def test_vibrance(self) -> None:
        self.assertEqual(
            {
                "LabEnabled": "true",
                "LabaCurve": "4;0.000000;0.000000;0.062500;0.037874;0.125000;0.083014;"
                + "0.187500;0.135895;0.250000;0.196612;0.312500;0.264732;"
                + "0.375000;0.339207;0.437500;0.418360;0.500000;0.500000;"
                + "0.562500;0.581640;0.625000;0.660793;0.687500;0.735268;"
                + "0.750000;0.803388;0.812500;0.864105;0.875000;0.916986;"
                + "0.937500;0.962126;1.000000;1.000000;",
                "LabbCurve": "4;0.000000;0.000000;0.062500;0.037874;0.125000;0.083014;"
                + "0.187500;0.135895;0.250000;0.196612;0.312500;0.264732;"
                + "0.375000;0.339207;0.437500;0.418360;0.500000;0.500000;"
                + "0.562500;0.581640;0.625000;0.660793;0.687500;0.735268;"
                + "0.750000;0.803388;0.812500;0.864105;0.875000;0.916986;"
                + "0.937500;0.962126;1.000000;1.000000;",
            },
            get_profile_args({"vibrance": 50}),
        )

        self.assertEqual(
            {
                "LabEnabled": "true",
                "LabaCurve": "4;0.000000;0.119203;1.000000;0.880797;",
                "LabbCurve": "4;0.000000;0.119203;1.000000;0.880797;",
            },
            get_profile_args({"vibrance": -50}),
        )

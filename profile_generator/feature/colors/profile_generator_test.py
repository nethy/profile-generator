from unittest import TestCase

from profile_generator.main.profile_params import ProfileParams

from .grading import profile_generator_test as grading_test
from .profile_generator import generate
from .space import profile_generator_test as profile_test
from .white_balance import profile_generator_test as wb_test

_DEFAULT = {
    "CCCurve": "4;0.0000000;0.0000000;0.0312500;0.0341107;"
    + "0.0625000;0.0701751;0.0937500;0.1068094;0.1250000;"
    + "0.1436592;0.1562500;0.1805670;0.1875000;0.2174440;"
    + "0.2187500;0.2542321;0.2500000;0.2908886;0.2812500;"
    + "0.3273790;0.3125000;0.3636739;0.3437500;0.3997456;"
    + "0.3750000;0.4355679;0.4062500;0.4711138;0.4375000;"
    + "0.5063557;0.4687500;0.5412639;0.5000000;0.5758059;"
    + "0.5312500;0.6099460;0.5625000;0.6436434;0.5937500;"
    + "0.6768519;0.6250000;0.7095176;0.6562500;0.7415770;"
    + "0.6875000;0.7729543;0.7187500;0.8035574;0.7500000;"
    + "0.8332718;0.7812500;0.8619529;0.8125000;0.8894124;"
    + "0.8437500;0.9153972;0.8750000;0.9395536;0.9062500;"
    + "0.9613583;0.9375000;0.9799784;0.9687500;0.9939283;"
    + "1.0000000;1.0000000;",
    **wb_test.DEFAULT,
    **grading_test.DEFAULT,
    **profile_test.DEFAULT,
    **grading_test.DEFAULT,
}


class ProfileGeneratorTest(TestCase):
    def test_generate_defaults(self) -> None:
        self.assertEqual(generate(ProfileParams()), _DEFAULT)

    def test_generate_vibrance(self) -> None:
        profile_params = ProfileParams()
        profile_params.parse({"colors": {"vibrance": 5}})
        self.assertEqual(
            generate(profile_params),
            _DEFAULT
            | {
                "CCCurve": "4;0.0000000;0.0000000;0.0312500;0.0397961;"
                + "0.0625000;0.0866365;0.0937500;0.1355471;0.1250000;"
                + "0.1849662;0.1562500;0.2341728;0.1875000;0.2827659;"
                + "0.2187500;0.3304937;0.2500000;0.3771841;0.2812500;"
                + "0.4227106;0.3125000;0.4669746;0.3437500;0.5098954;"
                + "0.3750000;0.5514041;0.4062500;0.5914392;0.4375000;"
                + "0.6299442;0.4687500;0.6668661;0.5000000;0.7021535;"
                + "0.5312500;0.7357561;0.5625000;0.7676235;0.5937500;"
                + "0.7977053;0.6250000;0.8259499;0.6562500;0.8523043;"
                + "0.6875000;0.8767142;0.7187500;0.8991229;0.7500000;"
                + "0.9194715;0.7812500;0.9376984;0.8125000;0.9537392;"
                + "0.8437500;0.9675259;0.8750000;0.9789871;0.9062500;"
                + "0.9880474;0.9375000;0.9946269;0.9687500;0.9986411;"
                + "1.0000000;1.0000000;",
            },
        )

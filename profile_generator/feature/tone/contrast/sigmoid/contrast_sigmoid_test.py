from unittest import TestCase

from .contrast_sigmoid import Point, get_contrast, get_flat

_GREY18 = 87 / 255
_SLOPE = 2.5


class ContrastSigmoid(TestCase):
    def test_get_flat(self) -> None:
        self.assertEqual(
            get_flat(_GREY18),
            [
                Point(x=0.0000000, y=0.0000000),
                Point(x=0.0196078, y=0.0431043),
                Point(x=0.0470588, y=0.0866823),
                Point(x=0.0784314, y=0.1299125),
                Point(x=0.1098039, y=0.1728683),
                Point(x=0.1411765, y=0.2154673),
                Point(x=0.1725490, y=0.2575952),
                Point(x=0.2039216, y=0.2990773),
                Point(x=0.2352941, y=0.3396614),
                Point(x=0.2666667, y=0.3790443),
                Point(x=0.2980392, y=0.4169463),
                Point(x=0.3294118, y=0.4531838),
                Point(x=0.3647059, y=0.4918818),
                Point(x=0.4000000, y=0.5284377),
                Point(x=0.4352941, y=0.5629956),
                Point(x=0.4705882, y=0.5957545),
                Point(x=0.5058824, y=0.6269402),
                Point(x=0.5450980, y=0.6600319),
                Point(x=0.5843137, y=0.6917889),
                Point(x=0.6235294, y=0.7225095),
                Point(x=0.6627451, y=0.7524620),
                Point(x=0.7019608, y=0.7818776),
                Point(x=0.7411765, y=0.8109450),
                Point(x=0.7803922, y=0.8398084),
                Point(x=0.8196078, y=0.8685666),
                Point(x=0.8588235, y=0.8972738),
                Point(x=0.8980392, y=0.9259421),
                Point(x=0.9372549, y=0.9545442),
                Point(x=0.9764706, y=0.9830169),
                Point(x=1.0000000, y=1.0000000),
            ],
        )

    def test_get_contrast(self) -> None:
        self.assertEqual(
            get_contrast(_SLOPE),
            [
                Point(x=0.0000000, y=0.0000000),
                Point(x=0.0470588, y=0.0002717),
                Point(x=0.0941176, y=0.0012655),
                Point(x=0.1411765, y=0.0046707),
                Point(x=0.1882353, y=0.0151044),
                Point(x=0.2313725, y=0.0407591),
                Point(x=0.2666667, y=0.0764917),
                Point(x=0.2980392, y=0.1165092),
                Point(x=0.3254902, y=0.1585523),
                Point(x=0.3490196, y=0.1999892),
                Point(x=0.3725490, y=0.2462859),
                Point(x=0.3960784, y=0.2970243),
                Point(x=0.4156863, y=0.3421817),
                Point(x=0.4352941, y=0.3893404),
                Point(x=0.4549020, y=0.4377998),
                Point(x=0.4745098, y=0.4867787),
                Point(x=0.4941176, y=0.5354639),
                Point(x=0.5137255, y=0.5830636),
                Point(x=0.5333333, y=0.6288578),
                Point(x=0.5529412, y=0.6722379),
                Point(x=0.5764706, y=0.7204564),
                Point(x=0.6000000, y=0.7640014),
                Point(x=0.6274510, y=0.8086028),
                Point(x=0.6549020, y=0.8466001),
                Point(x=0.6862745, y=0.8824704),
                Point(x=0.7215686, y=0.9143221),
                Point(x=0.7607843, y=0.9409576),
                Point(x=0.8039216, y=0.9619716),
                Point(x=0.8509804, y=0.9776530),
                Point(x=0.8980392, y=0.9880667),
                Point(x=0.9450980, y=0.9949259),
                Point(x=0.9921569, y=0.9994199),
                Point(x=1.0000000, y=1.0000000),
            ],
        )

from unittest import TestCase

from .contrast_sigmoid import Point, get_contrast, get_flat

_GREY18 = 0.08
_SLOPE = 2.5


class ContrastSigmoid(TestCase):
    def test_get_flat(self) -> None:
        self.assertEqual(
            get_flat(_GREY18),
            [
                Point(x=0.0000000, y=0.0000000),
                Point(x=0.0196078, y=0.0518891),
                Point(x=0.0431373, y=0.0933836),
                Point(x=0.0705882, y=0.1344666),
                Point(x=0.0980392, y=0.1752039),
                Point(x=0.1254902, y=0.2154898),
                Point(x=0.1529412, y=0.2551968),
                Point(x=0.1803922, y=0.2941709),
                Point(x=0.2078431, y=0.3322318),
                Point(x=0.2392157, y=0.3743545),
                Point(x=0.2705882, y=0.4147142),
                Point(x=0.3019608, y=0.4530250),
                Point(x=0.3333333, y=0.4890628),
                Point(x=0.3686275, y=0.5267362),
                Point(x=0.4039216, y=0.5613880),
                Point(x=0.4392157, y=0.5932459),
                Point(x=0.4784314, y=0.6258846),
                Point(x=0.5176471, y=0.6563606),
                Point(x=0.5568627, y=0.6854873),
                Point(x=0.5960784, y=0.7139713),
                Point(x=0.6352941, y=0.7422984),
                Point(x=0.6745098, y=0.7706964),
                Point(x=0.7137255, y=0.7991762),
                Point(x=0.7529412, y=0.8276218),
                Point(x=0.7921569, y=0.8558852),
                Point(x=0.8313725, y=0.8838512),
                Point(x=0.8705882, y=0.9114600),
                Point(x=0.9098039, y=0.9386974),
                Point(x=0.9490196, y=0.9655734),
                Point(x=0.9882353, y=0.9921051),
                Point(x=1.0000000, y=1.0000000),
            ],
        )

    def test_get_contrast(self) -> None:
        self.assertEqual(
            get_contrast(_SLOPE),
            [
                Point(x=0.0000000, y=0.0000000),
                Point(x=0.0470588, y=0.0002717),
                Point(x=0.0941176, y=0.0012655),
                Point(x=0.1411765, y=0.0046707),
                Point(x=0.1882353, y=0.0151044),
                Point(x=0.2313725, y=0.0407591),
                Point(x=0.2666667, y=0.0764917),
                Point(x=0.2980392, y=0.1165092),
                Point(x=0.3254902, y=0.1585523),
                Point(x=0.3490196, y=0.1999892),
                Point(x=0.3725490, y=0.2462859),
                Point(x=0.3960784, y=0.2970243),
                Point(x=0.4156863, y=0.3421817),
                Point(x=0.4352941, y=0.3893404),
                Point(x=0.4549020, y=0.4377998),
                Point(x=0.4745098, y=0.4867787),
                Point(x=0.4941176, y=0.5354639),
                Point(x=0.5137255, y=0.5830636),
                Point(x=0.5333333, y=0.6288578),
                Point(x=0.5529412, y=0.6722379),
                Point(x=0.5764706, y=0.7204564),
                Point(x=0.6000000, y=0.7640014),
                Point(x=0.6274510, y=0.8086028),
                Point(x=0.6549020, y=0.8466001),
                Point(x=0.6862745, y=0.8824704),
                Point(x=0.7215686, y=0.9143221),
                Point(x=0.7607843, y=0.9409576),
                Point(x=0.8039216, y=0.9619716),
                Point(x=0.8509804, y=0.9776530),
                Point(x=0.8980392, y=0.9880667),
                Point(x=0.9450980, y=0.9949259),
                Point(x=0.9921569, y=0.9994199),
                Point(x=1.0000000, y=1.0000000),
            ],
        )

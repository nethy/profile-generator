from unittest import TestCase

from .contrast_sigmoid import Point, get_contrast, get_flat

_GREY18 = 0.08
_SLOPE = 2.5


class ContrastSigmoid(TestCase):
    def test_get_flat(self) -> None:
        self.assertEqual(
            get_flat(_GREY18),
            [
                Point(x=0.0000000, y=0.0000000),
                Point(x=0.0196078, y=0.0518788),
                Point(x=0.0431373, y=0.0933374),
                Point(x=0.0705882, y=0.1343322),
                Point(x=0.0980392, y=0.1749040),
                Point(x=0.1254902, y=0.2149346),
                Point(x=0.1529412, y=0.2543090),
                Point(x=0.1803922, y=0.2929190),
                Point(x=0.2117647, y=0.3359842),
                Point(x=0.2431373, y=0.3777990),
                Point(x=0.2745098, y=0.4182636),
                Point(x=0.3058824, y=0.4573046),
                Point(x=0.3372549, y=0.4948742),
                Point(x=0.3686275, y=0.5309485),
                Point(x=0.4039216, y=0.5697421),
                Point(x=0.4392157, y=0.6066637),
                Point(x=0.4745098, y=0.6417592),
                Point(x=0.5098039, y=0.6750917),
                Point(x=0.5450980, y=0.7067361),
                Point(x=0.5843137, y=0.7400170),
                Point(x=0.6235294, y=0.7714341),
                Point(x=0.6627451, y=0.8011072),
                Point(x=0.7019608, y=0.8291544),
                Point(x=0.7411765, y=0.8556894),
                Point(x=0.7843137, y=0.8832601),
                Point(x=0.8274510, y=0.9092668),
                Point(x=0.8705882, y=0.9338341),
                Point(x=0.9137255, y=0.9570770),
                Point(x=0.9568627, y=0.9791003),
                Point(x=1.0000000, y=1.0000000),
            ],
        )

    def test_get_contrast(self) -> None:
        self.assertEqual(
            get_contrast(_SLOPE),
            [
                Point(x=0.0000000, y=0.0000000),
                Point(x=0.0470588, y=0.0000949),
                Point(x=0.0941176, y=0.0005353),
                Point(x=0.1411765, y=0.0023914),
                Point(x=0.1882353, y=0.0092363),
                Point(x=0.2313725, y=0.0287820),
                Point(x=0.2666667, y=0.0636005),
                Point(x=0.2980392, y=0.1046405),
                Point(x=0.3254902, y=0.1483615),
                Point(x=0.3490196, y=0.1917303),
                Point(x=0.3725490, y=0.2402406),
                Point(x=0.3921569, y=0.2841214),
                Point(x=0.4117647, y=0.3305268),
                Point(x=0.4313725, y=0.3787128),
                Point(x=0.4509804, y=0.4278252),
                Point(x=0.4705882, y=0.4769633),
                Point(x=0.4901961, y=0.5252502),
                Point(x=0.5098039, y=0.5718995),
                Point(x=0.5294118, y=0.6162662),
                Point(x=0.5529412, y=0.6658365),
                Point(x=0.5764706, y=0.7109535),
                Point(x=0.6039216, y=0.7577495),
                Point(x=0.6313725, y=0.7984105),
                Point(x=0.6627451, y=0.8379359),
                Point(x=0.6980392, y=0.8745948),
                Point(x=0.7372549, y=0.9071593),
                Point(x=0.7803922, y=0.9349399),
                Point(x=0.8235294, y=0.9560800),
                Point(x=0.8705882, y=0.9733011),
                Point(x=0.9176471, y=0.9858783),
                Point(x=0.9647059, y=0.9949568),
                Point(x=1.0000000, y=1.0000000),
            ],
        )

from unittest import TestCase

from .contrast_sigmoid import Point, get_contrast, get_flat

_GREY18 = 0.08
_SLOPE = 2.5


class ContrastSigmoid(TestCase):
    def test_get_flat(self) -> None:
        self.assertEqual(
            get_flat(_GREY18),
            [
                Point(x=0.0000000, y=0.0000000),
                Point(x=0.0196078, y=0.0518788),
                Point(x=0.0431373, y=0.0933374),
                Point(x=0.0705882, y=0.1343322),
                Point(x=0.0980392, y=0.1749040),
                Point(x=0.1254902, y=0.2149346),
                Point(x=0.1529412, y=0.2543090),
                Point(x=0.1803922, y=0.2929190),
                Point(x=0.2117647, y=0.3359842),
                Point(x=0.2431373, y=0.3777990),
                Point(x=0.2745098, y=0.4182636),
                Point(x=0.3058824, y=0.4573046),
                Point(x=0.3372549, y=0.4948742),
                Point(x=0.3686275, y=0.5309485),
                Point(x=0.4039216, y=0.5697421),
                Point(x=0.4392157, y=0.6066637),
                Point(x=0.4745098, y=0.6417592),
                Point(x=0.5098039, y=0.6750917),
                Point(x=0.5450980, y=0.7067361),
                Point(x=0.5843137, y=0.7400170),
                Point(x=0.6235294, y=0.7714341),
                Point(x=0.6627451, y=0.8011072),
                Point(x=0.7019608, y=0.8291544),
                Point(x=0.7411765, y=0.8556894),
                Point(x=0.7843137, y=0.8832601),
                Point(x=0.8274510, y=0.9092668),
                Point(x=0.8705882, y=0.9338341),
                Point(x=0.9137255, y=0.9570770),
                Point(x=0.9568627, y=0.9791003),
                Point(x=1.0000000, y=1.0000000),
            ],
        )

    def test_get_contrast(self) -> None:
        self.assertEqual(
            get_contrast(_SLOPE),
            [
                Point(x=0.0000000, y=0.0000000),
                Point(x=0.0470588, y=0.0000936),
                Point(x=0.0941176, y=0.0005116),
                Point(x=0.1411765, y=0.0022310),
                Point(x=0.1882353, y=0.0085351),
                Point(x=0.2352941, y=0.0295303),
                Point(x=0.2705882, y=0.0651415),
                Point(x=0.3019608, y=0.1072265),
                Point(x=0.3294118, y=0.1522511),
                Point(x=0.3529412, y=0.1969677),
                Point(x=0.3764706, y=0.2469168),
                Point(x=0.3960784, y=0.2919428),
                Point(x=0.4156863, y=0.3393220),
                Point(x=0.4352941, y=0.3882005),
                Point(x=0.4549020, y=0.4376392),
                Point(x=0.4745098, y=0.4866948),
                Point(x=0.4941176, y=0.5344997),
                Point(x=0.5137255, y=0.5803269),
                Point(x=0.5333333, y=0.6236288),
                Point(x=0.5568627, y=0.6717662),
                Point(x=0.5803922, y=0.7154666),
                Point(x=0.6078431, y=0.7608349),
                Point(x=0.6352941, y=0.8004380),
                Point(x=0.6666667, y=0.8392338),
                Point(x=0.7019608, y=0.8755675),
                Point(x=0.7411765, y=0.9081336),
                Point(x=0.7843137, y=0.9360496),
                Point(x=0.8274510, y=0.9572570),
                Point(x=0.8745098, y=0.9743946),
                Point(x=0.9215686, y=0.9867615),
                Point(x=0.9686275, y=0.9955928),
                Point(x=1.0000000, y=1.0000000),
            ],
        )
